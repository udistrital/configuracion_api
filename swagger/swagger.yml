swagger: "2.0"
info:
  title: beego Test API
  description: beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /v1
paths:
  /aplicacion/:
    get:
      tags:
      - aplicacion
      description: get Aplicacion
      operationId: AplicacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Aplicacion'
        "404":
          description: not found resource
    post:
      tags:
      - aplicacion
      description: create Aplicacion
      operationId: AplicacionController.Post
      parameters:
      - in: body
        name: body
        description: body for Aplicacion content
        required: true
        schema:
          $ref: '#/definitions/models.Aplicacion'
      responses:
        "201":
          description: ""
          schema:
            $ref: '#/definitions/models.Aplicacion'
        "400":
          description: the request contains incorrect syntax
  /aplicacion/{id}:
    get:
      tags:
      - aplicacion
      description: get Aplicacion by id
      operationId: AplicacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Aplicacion'
        "404":
          description: not found resource
    put:
      tags:
      - aplicacion
      description: update the Aplicacion
      operationId: AplicacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: body for Aplicacion content
        required: true
        schema:
          $ref: '#/definitions/models.Aplicacion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Aplicacion'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - aplicacion
      description: delete the Aplicacion
      operationId: AplicacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /aplicacion_rol/aplicacion_rol:
    post:
      tags:
      - aplicacion_rol
      description: create Aplicacion
      operationId: AplicacionRolController.Post
      parameters:
      - in: body
        name: body
        description: body for Perfil content
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/models.Perfil'
      responses:
        "201":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Perfil'
        "400":
          description: the request contains incorrect syntax
  /menu_opcion/:
    get:
      tags:
      - menu_opcion
      description: get MenuOpcion
      operationId: MenuOpcionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/models.MenuOpcion'
        "404":
          description: not found resource
    post:
      tags:
      - menu_opcion
      description: create MenuOpcion
      operationId: MenuOpcionController.Post
      parameters:
      - in: body
        name: body
        description: body for MenuOpcion content
        required: true
        schema:
          $ref: '#/definitions/models.MenuOpcion'
      responses:
        "201":
          description: ""
          schema:
            $ref: '#/definitions/models.MenuOpcion'
        "400":
          description: the request contains incorrect syntax
  /menu_opcion/{id}:
    get:
      tags:
      - menu_opcion
      description: get MenuOpcion by id
      operationId: MenuOpcionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MenuOpcion'
        "404":
          description: not found resource
    put:
      tags:
      - menu_opcion
      description: update the MenuOpcion
      operationId: MenuOpcionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: body for MenuOpcion content
        required: true
        schema:
          $ref: '#/definitions/models.MenuOpcion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MenuOpcion'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - menu_opcion
      description: delete the MenuOpcion
      operationId: MenuOpcionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /menu_opcion_padre/:
    get:
      tags:
      - menu_opcion_padre
      description: get MenuOpcionPadre
      operationId: MenuOpcionPadreController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/models.MenuOpcionPadre'
        "404":
          description: not found resource
    post:
      tags:
      - menu_opcion_padre
      description: create MenuOpcionPadre
      operationId: MenuOpcionPadreController.Post
      parameters:
      - in: body
        name: body
        description: body for MenuOpcionPadre content
        required: true
        schema:
          $ref: '#/definitions/models.MenuOpcionPadre'
      responses:
        "201":
          description: ""
          schema:
            $ref: '#/definitions/models.MenuOpcionPadre'
        "400":
          description: the request contains incorrect syntax
  /menu_opcion_padre/{id}:
    get:
      tags:
      - menu_opcion_padre
      description: get MenuOpcionPadre by id
      operationId: MenuOpcionPadreController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MenuOpcionPadre'
        "404":
          description: not found resource
    put:
      tags:
      - menu_opcion_padre
      description: update the MenuOpcionPadre
      operationId: MenuOpcionPadreController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: body for MenuOpcionPadre content
        required: true
        schema:
          $ref: '#/definitions/models.MenuOpcionPadre'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MenuOpcionPadre'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - menu_opcion_padre
      description: delete the MenuOpcionPadre
      operationId: MenuOpcionPadreController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /menu_opcion_padre/ArbolMenus/{roles}/{app}:
    get:
      tags:
      - menu_opcion_padre
      description: Genera árbol de menus de acuerdo a roles y app
      operationId: MenuOpcionPadreController.ArbolMenus
      parameters:
      - in: path
        name: roles
        description: Los roles a los que se necesita que se desplieguen las opciones
        required: true
        type: string
      - in: path
        name: app
        description: Aplicación a la cual pertenecen las opciones
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Menu'
        "403":
          description: :app is empty
  /menu_opcion_padre/permisos_roles:
    get:
      tags:
      - menu_opcion_padre
      description: Genera árbol de permisos concedidos a una lista de roles en una apliación determinada. Los parámetros se pasan como parámetros de tipo query y no path
      operationId: MenuOpcionPadreController.ArbolMenuRoles
      parameters:
      - in: query
        name: app
        description: Aplicación de la que se consulta el menú
        required: true
        type: string
      - in: query
        name: roles
        description: Lista de roles a los que se desea consultar el menú
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Menu'
        "400":
          description: app is empty
  /parametro/:
    get:
      tags:
      - parametro
      description: get Parametro
      operationId: ParametroController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Parametro'
        "404":
          description: not found resource
    post:
      tags:
      - parametro
      description: create Parametro
      operationId: ParametroController.Post
      parameters:
      - in: body
        name: body
        description: body for Parametro content
        required: true
        schema:
          $ref: '#/definitions/models.Parametro'
      responses:
        "201":
          description: ""
          schema:
            $ref: '#/definitions/models.Parametro'
        "400":
          description: the request contains incorrect syntax
  /parametro/{id}:
    get:
      tags:
      - parametro
      description: get Parametro by id
      operationId: ParametroController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Parametro'
        "404":
          description: not found resource
    put:
      tags:
      - parametro
      description: update the Parametro
      operationId: ParametroController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: body for Parametro content
        required: true
        schema:
          $ref: '#/definitions/models.Parametro'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Parametro'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - parametro
      description: delete the Parametro
      operationId: ParametroController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /perfil/:
    get:
      tags:
      - perfil
      description: get Perfil
      operationId: PerfilController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Perfil'
        "404":
          description: not found resource
    post:
      tags:
      - perfil
      description: create Perfil
      operationId: PerfilController.Post
      parameters:
      - in: body
        name: body
        description: body for Perfil content
        required: true
        schema:
          $ref: '#/definitions/models.Perfil'
      responses:
        "201":
          description: ""
          schema:
            $ref: '#/definitions/models.Perfil'
        "400":
          description: the request contains incorrect syntax
  /perfil/{id}:
    get:
      tags:
      - perfil
      description: get Perfil by id
      operationId: PerfilController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Perfil'
        "404":
          description: not found resource
    put:
      tags:
      - perfil
      description: update the Perfil
      operationId: PerfilController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: body for Perfil content
        required: true
        schema:
          $ref: '#/definitions/models.Perfil'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Perfil'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - perfil
      description: delete the Perfil
      operationId: PerfilController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /perfil_x_menu_opcion/:
    get:
      tags:
      - perfil_x_menu_opcion
      description: get PerfilXMenuOpcion
      operationId: PerfilXMenuOpcionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/models.PerfilXMenuOpcion'
        "404":
          description: not found resource
    post:
      tags:
      - perfil_x_menu_opcion
      description: create PerfilXMenuOpcion
      operationId: PerfilXMenuOpcionController.Post
      parameters:
      - in: body
        name: body
        description: body for PerfilXMenuOpcion content
        required: true
        schema:
          $ref: '#/definitions/models.PerfilXMenuOpcion'
      responses:
        "201":
          description: ""
          schema:
            $ref: '#/definitions/models.PerfilXMenuOpcion'
        "400":
          description: the request contains incorrect syntax
  /perfil_x_menu_opcion/{id}:
    get:
      tags:
      - perfil_x_menu_opcion
      description: get PerfilXMenuOpcion by id
      operationId: PerfilXMenuOpcionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.PerfilXMenuOpcion'
        "404":
          description: not found resource
    put:
      tags:
      - perfil_x_menu_opcion
      description: update the PerfilXMenuOpcion
      operationId: PerfilXMenuOpcionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: body for PerfilXMenuOpcion content
        required: true
        schema:
          $ref: '#/definitions/models.PerfilXMenuOpcion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.PerfilXMenuOpcion'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - perfil_x_menu_opcion
      description: delete the PerfilXMenuOpcion
      operationId: PerfilXMenuOpcionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /perfil_x_menu_opcion/MenusPorAplicacion/{id}:
    get:
      tags:
      - perfil_x_menu_opcion
      description: getMenuPorAplicacion
      operationId: PerfilXMenuOpcionController.MenusPorAplicacion
      parameters:
      - in: path
        name: id
        description: id de la aplicación a la cual pertenecen las opciones
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Menu'
        "404":
          description: not found resource
  /proceso/:
    get:
      tags:
      - proceso
      description: get Proceso
      operationId: ProcesoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Proceso'
        "403":
          description: ""
    post:
      tags:
      - proceso
      description: create Proceso
      operationId: ProcesoController.Post
      parameters:
      - in: body
        name: body
        description: body for Proceso content
        required: true
        schema:
          $ref: '#/definitions/models.Proceso'
      responses:
        "201":
          description: ""
          schema:
            $ref: '#/definitions/models.Proceso'
        "403":
          description: body is empty
  /proceso/{id}:
    get:
      tags:
      - proceso
      description: get Proceso by id
      operationId: ProcesoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Proceso'
        "403":
          description: :id is empty
    put:
      tags:
      - proceso
      description: update the Proceso
      operationId: ProcesoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: body for Proceso content
        required: true
        schema:
          $ref: '#/definitions/models.Proceso'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Proceso'
        "403":
          description: :id is not int
    delete:
      tags:
      - proceso
      description: delete the Proceso
      operationId: ProcesoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /proceso_estado/:
    get:
      tags:
      - proceso_estado
      description: get EstadoProceso
      operationId: EstadoProcesoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/models.EstadoProceso'
        "403":
          description: ""
    post:
      tags:
      - proceso_estado
      description: create EstadoProceso
      operationId: EstadoProcesoController.Post
      parameters:
      - in: body
        name: body
        description: body for EstadoProceso content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoProceso'
      responses:
        "201":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoProceso'
        "403":
          description: body is empty
  /proceso_estado/{id}:
    get:
      tags:
      - proceso_estado
      description: get EstadoProceso by id
      operationId: EstadoProcesoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoProceso'
        "403":
          description: :id is empty
    put:
      tags:
      - proceso_estado
      description: update the EstadoProceso
      operationId: EstadoProcesoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: body for EstadoProceso content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoProceso'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoProceso'
        "403":
          description: :id is not int
    delete:
      tags:
      - proceso_estado
      description: delete the EstadoProceso
      operationId: EstadoProcesoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /proceso_transicion/:
    get:
      tags:
      - proceso_transicion
      description: get TransicionProceso
      operationId: TransicionProcesoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/models.TransicionProceso'
        "403":
          description: ""
    post:
      tags:
      - proceso_transicion
      description: create TransicionProceso
      operationId: TransicionProcesoController.Post
      parameters:
      - in: body
        name: body
        description: body for TransicionProceso content
        required: true
        schema:
          $ref: '#/definitions/models.TransicionProceso'
      responses:
        "201":
          description: ""
          schema:
            $ref: '#/definitions/models.TransicionProceso'
        "403":
          description: body is empty
  /proceso_transicion/{id}:
    get:
      tags:
      - proceso_transicion
      description: get TransicionProceso by id
      operationId: TransicionProcesoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TransicionProceso'
        "403":
          description: :id is empty
    put:
      tags:
      - proceso_transicion
      description: update the TransicionProceso
      operationId: TransicionProcesoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: body for TransicionProceso content
        required: true
        schema:
          $ref: '#/definitions/models.TransicionProceso'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TransicionProceso'
        "403":
          description: :id is not int
    delete:
      tags:
      - proceso_transicion
      description: delete the TransicionProceso
      operationId: TransicionProcesoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /proceso_version/:
    get:
      tags:
      - proceso_version
      description: get VersionProceso
      operationId: VersionProcesoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/models.VersionProceso'
        "403":
          description: ""
    post:
      tags:
      - proceso_version
      description: create VersionProceso
      operationId: VersionProcesoController.Post
      parameters:
      - in: body
        name: body
        description: body for VersionProceso content
        required: true
        schema:
          $ref: '#/definitions/models.VersionProceso'
      responses:
        "201":
          description: ""
          schema:
            $ref: '#/definitions/models.VersionProceso'
        "403":
          description: body is empty
  /proceso_version/{id}:
    get:
      tags:
      - proceso_version
      description: get VersionProceso by id
      operationId: VersionProcesoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.VersionProceso'
        "403":
          description: :id is empty
    put:
      tags:
      - proceso_version
      description: update the VersionProceso
      operationId: VersionProcesoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: body for VersionProceso content
        required: true
        schema:
          $ref: '#/definitions/models.VersionProceso'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.VersionProceso'
        "403":
          description: :id is not int
    delete:
      tags:
      - proceso_version
      description: delete the VersionProceso
      operationId: VersionProcesoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
definitions:
  14271.<nil>.Menu:
    title: Menu
    type: object
  models.Aplicacion:
    title: Aplicacion
    type: object
    properties:
      Alias:
        type: string
      Descripcion:
        type: string
      Dominio:
        type: string
      Estado:
        type: boolean
      EstiloIcono:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  models.EstadoProceso:
    title: EstadoProceso
    type: object
    properties:
      Activo:
        type: boolean
      Descripcion:
        type: string
      FechaCreacion:
        type: string
        format: datetime
      FechaModificacion:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      Metadatos:
        type: string
      Nombre:
        type: string
      Sigla:
        type: string
      VersionProcesoId:
        $ref: '#/definitions/models.VersionProceso'
  models.Menu:
    title: Menu
    type: object
    properties:
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      Opciones:
        $ref: '#/definitions/14271.<nil>.Menu'
      TipoOpcion:
        type: string
      Url:
        type: string
  models.MenuOpcion:
    title: MenuOpcion
    type: object
    properties:
      Aplicacion:
        $ref: '#/definitions/models.Aplicacion'
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Layout:
        type: string
      Nombre:
        type: string
      TipoOpcion:
        type: string
      Url:
        type: string
  models.MenuOpcionPadre:
    title: MenuOpcionPadre
    type: object
    properties:
      Hijo:
        $ref: '#/definitions/models.MenuOpcion'
      Id:
        type: integer
        format: int64
      Padre:
        $ref: '#/definitions/models.MenuOpcion'
  models.Parametro:
    title: Parametro
    type: object
    properties:
      Aplicacion:
        $ref: '#/definitions/models.Aplicacion'
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      Valor:
        type: string
  models.Perfil:
    title: Perfil
    type: object
    properties:
      Aplicacion:
        $ref: '#/definitions/models.Aplicacion'
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  models.PerfilXMenuOpcion:
    title: PerfilXMenuOpcion
    type: object
    properties:
      Id:
        type: integer
        format: int64
      Opcion:
        $ref: '#/definitions/models.MenuOpcion'
      Perfil:
        $ref: '#/definitions/models.Perfil'
  models.Proceso:
    title: Proceso
    type: object
    properties:
      Activo:
        type: boolean
      AplicacionId:
        $ref: '#/definitions/models.Aplicacion'
      Descripcion:
        type: string
      FechaCreacion:
        type: string
        format: datetime
      FechaModificacion:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      Metadatos:
        type: string
      Nombre:
        type: string
      Sigla:
        type: string
  models.TransicionProceso:
    title: TransicionProceso
    type: object
    properties:
      Activo:
        type: boolean
      Descripcion:
        type: string
      EstadoProcesoIdAnterior:
        $ref: '#/definitions/models.EstadoProceso'
      EstadoProcesoIdSiguiente:
        $ref: '#/definitions/models.EstadoProceso'
      FechaCreacion:
        type: string
        format: datetime
      FechaModificacion:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      Metadatos:
        type: string
      Nombre:
        type: string
      Sigla:
        type: string
  models.VersionProceso:
    title: VersionProceso
    type: object
    properties:
      Activo:
        type: boolean
      FechaCreacion:
        type: string
        format: datetime
      FechaModificacion:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      Metadatos:
        type: string
      ProcesoId:
        $ref: '#/definitions/models.Proceso'
      Version:
        type: integer
        format: int32
tags:
- name: perfil_x_menu_opcion
  description: |
    PerfilXMenuOpcionController oprations for PerfilXMenuOpcion
- name: menu_opcion_padre
  description: |
    MenuOpcionPadreController oprations for MenuOpcionPadre
- name: menu_opcion
  description: |
    MenuOpcionController oprations for MenuOpcion
- name: aplicacion
  description: |
    AplicacionController operations for Aplicacion
- name: aplicacion_rol
  description: |
    AplicacionRolController operations for Aplicacion
- name: parametro
  description: |
    ParametroController oprations for Parametro
- name: perfil
  description: |
    PerfilController oprations for Perfil
- name: proceso
  description: |2
     ProcesoController operations for Proceso
- name: proceso_version
  description: |2
     VersionProcesoController operations for VersionProceso
- name: proceso_estado
  description: |2
     EstadoProcesoController operations for EstadoProceso
- name: proceso_transicion
  description: |2
     TransicionProcesoController operations for TransicionProceso
